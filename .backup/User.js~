'use strict';

const mongoose = require('mongoose');

console.log("in user");
const User = mongoose.model('User', new mongoose.Schema({
  email: {
    type: String,
    required: true,
    unique: true,
    match: /[\wÆØÅæøå.-]+@[\wÆØÅæøå.-]+\.[\wÆØÅæøå.-]+/,
    lowercase: true
  },
  password: {
    type: String,
    required: true
  },
  role: {
    type: String,
    required: true,
    default: "user",
    enum: ["user", "chef", "admin"],
  },
  location: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Location',
    //TODO changed this because you then have the chicken-egg problem with chefs and locations. each one needs the other. this needs to be rethought over
    required: function() {
      return this.role === 'user';
    }
  },
  chefName: {
    type: String
  },
  firstName: {
    type: String
  },
  lastName: {
    type: String
  },
  confirmed: {
    type: Boolean,
    required: true,
    default: false
  },
  phone: String
}));

module.exports = User;
